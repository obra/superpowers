#!/usr/bin/env bash
# Complete auto-sync process for skills best practices

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "${SCRIPT_DIR}/.." && pwd)"
REPORT_FILE="${REPO_ROOT}/sync-report.md"

# Initialize report
cat > "$REPORT_FILE" <<EOF
# Skills Best Practices Sync Report

**Generated:** $(date '+%Y-%m-%d %H:%M:%S')
**Repository:** $(git remote get-url origin 2>/dev/null || echo "local")

---

EOF

echo "========================================"
echo "  Auto-Sync Skills Best Practices"
echo "========================================"
echo ""

# Track overall status
docs_status=0
repos_status=0

# Check Anthropic documentation
echo "Step 1: Checking Anthropic Documentation"
echo "----------------------------------------"
if "${SCRIPT_DIR}/sync-anthropic-docs.sh"; then
  docs_status=0
else
  docs_status=$?
fi
echo ""

# Check official repositories
echo "Step 2: Checking Official Repositories"
echo "---------------------------------------"
if "${SCRIPT_DIR}/sync-official-repos.sh"; then
  repos_status=0
else
  repos_status=$?
fi
echo ""

# Summary
echo "========================================"
echo "  Sync Summary"
echo "========================================"

if [ $docs_status -eq 0 ] && [ $repos_status -eq 0 ]; then
  echo "âœ“ Everything up to date!"
  echo ""
  rm -f "$REPORT_FILE"
  exit 0
else
  echo "ðŸ“‹ Updates detected!"
  echo ""
  echo "Report saved to: $REPORT_FILE"
  echo ""
  echo "Next steps:"
  echo "  1. Review the report: cat $REPORT_FILE"
  echo "  2. Check specific changes in detail"
  echo "  3. Update affected skills as needed"
  echo "  4. Test with: superpowers:testing-skills-with-subagents"
  echo "  5. Commit and release updates"
  echo ""

  # Add summary to report
  cat >> "$REPORT_FILE" <<EOF

---

## Next Steps

1. **Review Changes**: Examine the updates listed above
2. **Assess Impact**: Determine which skills need updating
3. **Create Branch**: \`git checkout -b update/sync-$(date +%Y-%m-%d)\`
4. **Apply Updates**: Modify affected skills following new best practices
5. **Test**: Use \`testing-skills-with-subagents\` to validate changes
6. **Document**: Update RELEASE-NOTES.md with changes
7. **Version Bump**: Update version in .claude-plugin/plugin.json
8. **Commit**: \`git commit -am "Update skills following latest best practices"\`
9. **Push**: \`git push origin update/sync-$(date +%Y-%m-%d)\`
10. **PR**: Create pull request for review

---

*This report was automatically generated by auto-sync.sh*
EOF

  exit 1
fi
